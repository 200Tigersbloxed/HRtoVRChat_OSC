<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>